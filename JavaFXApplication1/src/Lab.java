
import com.toedter.calendar.JDateChooser;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MSI Laptop
 */
public class Lab extends javax.swing.JFrame {

    /**
     * Creates new form Lab
     */
    
    public Lab() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        LabDoctorId = new javax.swing.JTextField();
        LabPatientId = new javax.swing.JTextField();
        Labno = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        LabAmount = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        LabDelete = new javax.swing.JButton();
        LabUpdate = new javax.swing.JButton();
        LabAdd = new javax.swing.JButton();
        showtable = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        Category = new javax.swing.JTextField();
        LabDate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Lab ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Lab No");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Date");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Doctor ID");

        Back.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Patient ID");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Amount");

        LabDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LabDelete.setText("Delete");
        LabDelete.setToolTipText("");
        LabDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LabDeleteActionPerformed(evt);
            }
        });

        LabUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LabUpdate.setText("Update");
        LabUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LabUpdateActionPerformed(evt);
            }
        });

        LabAdd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LabAdd.setText("Add");
        LabAdd.setToolTipText("");
        LabAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LabAddActionPerformed(evt);
            }
        });

        showtable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        showtable.setText("Show Table");
        showtable.setToolTipText("");
        showtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showtableActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lab_No", "Date", "DoctorID", "PatientID", "Category", "Amount"
            }
        ));
        jScrollPane2.setViewportView(jTable4);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Category");

        Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel1))
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LabAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                            .addComponent(Category, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                            .addComponent(LabDate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showtable, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(131, 131, 131)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(LabPatientId, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                        .addComponent(LabDoctorId)
                        .addComponent(Labno))
                    .addContainerGap(213, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LabDate)
                            .addComponent(LabDelete)
                            .addComponent(jLabel3))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(LabAdd)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabUpdate)
                        .addGap(13, 13, 13)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(showtable))
                            .addComponent(Back))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(LabAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(Labno, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(68, 68, 68)
                    .addComponent(LabDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(LabPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(466, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        this.hide();
        new Admin().show();
    }//GEN-LAST:event_BackActionPerformed

    private void LabDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabDeleteActionPerformed
        // TODO add your handling code here:
         try {
              
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");
            int row = jTable4.getSelectedRow();
            String value = (jTable4.getModel().getValueAt(row, 0).toString());
            String  sql = "DELETE FROM Lab WHERE Lab_No ="+value;
            PreparedStatement ps = connection.prepareStatement(sql);
        
         ps.executeUpdate();
          DefaultTableModel model = (DefaultTableModel)jTable4.getModel();
          model.setRowCount(0);
         JOptionPane.showMessageDialog(null, "DELETE Complete");
            } catch (Exception e) {
            e.printStackTrace();
        } 
        
        
       
        
    }//GEN-LAST:event_LabDeleteActionPerformed

    private void LabAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabAddActionPerformed
        // TODO add your handling code here:
              
              
              String lab_no = Labno.getText();
              String date = LabDate.getText();
              String lab_dct_id = LabDoctorId.getText();
              String lab_patient_id = LabPatientId.getText();
              String category = Category.getText();
              String labamount = LabAmount.getText();
              
           
           
             
              
            
                 
               try {
              
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");
   
   
         
             
         String  sqlquery = "INSERT INTO Lab(Lab_No,Admission_Date,DoctorID,PatientID ,Category ,Amount) VALUES ('"+lab_no+"','"+date +"','"+lab_dct_id+"','"+ lab_patient_id+"','"+category+"','"+labamount+"')";
         
         PreparedStatement pst = connection.prepareStatement(sqlquery);
        
         pst.execute();
         JOptionPane.showMessageDialog(null, "SuccessFully Added!!!");
        
      
        
         
        
       ////////////////Clear The Text Field
       
        Labno.setText("");
        LabDate.setText("");
        LabDoctorId.setText("");
        LabPatientId.setText("");
        LabAmount.setText("");
        Category.setText("");
     
        
      
           
             
       
        } catch (Exception e) {
            e.printStackTrace();
        }  
                     
        
        
    }//GEN-LAST:event_LabAddActionPerformed

    private void LabUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabUpdateActionPerformed
        // TODO add your handling code here:
        
        
         try {
             
             SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");
            int row = jTable4.getSelectedRow();
            String value = (jTable4.getModel().getValueAt(row, 0).toString());
            String sql = "UPDATE Lab SET Admission_Date =?,DoctorID =?,PatientID=?,Category=?,Amount=? WHERE Lab_No =" + value;
            PreparedStatement ps = connection.prepareStatement(sql);

            
            ps.setString(1, LabDate.getText());
            ps.setString(2, LabDoctorId.getText());
            ps.setString(3, LabPatientId.getText());
            ps.setString(4, Category.getText());
            ps.setString(5, LabAmount.getText());
            
           
            ps.executeUpdate();
            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
            model.setRowCount(0);
            
            JOptionPane.showMessageDialog(null, "UPDATE Complete");
        } catch (Exception e) {
            e.printStackTrace();
        }


                    
        Labno.setText("");
        LabDate.setText("");
        LabDoctorId.setText("");
        LabPatientId.setText("");
        LabAmount.setText("");
        
        
           
        
        
    }//GEN-LAST:event_LabUpdateActionPerformed

    private void showtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showtableActionPerformed

        
            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
            model.setRowCount(0);
            
        try{

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");

            Statement st = connection.createStatement();
            String sql = "select *from Lab";

            ResultSet rs = st.executeQuery(sql);

            while(rs.next()){

               
                
              String lab_no = String.valueOf(rs.getString("Lab_No"));
              String date = String.valueOf(rs.getString("Admission_Date"));
              String lab_dct_id = String.valueOf(rs.getString("DoctorID"));
              String lab_patient_id = String.valueOf(rs.getString("PatientID"));
              String category = String.valueOf(rs.getString("Category"));
              String labamount = String.valueOf(rs.getString("Amount"));
             
                         
                

                String tbData[] = {lab_no ,date,lab_dct_id, lab_patient_id,category ,labamount};

                DefaultTableModel tblModel = (DefaultTableModel)jTable4.getModel();

                tblModel.addRow(tbData);

            }

        } catch (Exception e) {

            e.printStackTrace();

        }

    }//GEN-LAST:event_showtableActionPerformed

    private void CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lab().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTextField Category;
    private javax.swing.JButton LabAdd;
    private javax.swing.JTextField LabAmount;
    private javax.swing.JTextField LabDate;
    private javax.swing.JButton LabDelete;
    private javax.swing.JTextField LabDoctorId;
    private javax.swing.JTextField LabPatientId;
    private javax.swing.JButton LabUpdate;
    private javax.swing.JTextField Labno;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable4;
    private javax.swing.JButton showtable;
    // End of variables declaration//GEN-END:variables
}
